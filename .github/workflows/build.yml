name: Check Branch and Trigger Workflow

on:
  push:
    branches:
      - '*'

jobs:
  check-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Check if branch exists
        id: branch-check
        run: |
          echo "branch name: ${{ github.ref }}"
          exists=$(curl -s -o /dev/null -w "%{http_code}" -X GET \
            "https://api.github.com/repos/millicast/millicast-player-unreal-engine-plugin/git/${{ github.ref }}" \
          )
          echo "http response(200 - branch exists, 404 - branch doesn't exist): $exists"
          echo "branch_exists=$(if [ $exists -eq 200 ]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT 


      - name: generate GH access token
        run: |
          export GH_APP_RELEASECREATOR_TOKEN_PYTHON_SCRIPT=$(gh_releasecreator_generate_at_script)
          export GH_APP_RELEASECREATOR_PRIV_KEY=$(gh_releasecreator_app_priv_key_1)
          export GH_APP_ID=$(gh_releasecreator_app_id)
          export GH_APP_INSTALLATION_ID=${{ parameters.GH_APP_INSTALLATION_ID }}
          python3 -m pip install jwt requests
          echo ${GH_APP_RELEASECREATOR_TOKEN_PYTHON_SCRIPT} | base64 -d > ${{ vars.GITHUB_WORKSPACE }}/generate_gh_app_installation_token.py
          echo ${GH_APP_RELEASECREATOR_PRIV_KEY} | base64 -d > ${{ vars.GITHUB_WORKSPACE }}/gh_app_priv_key.pem
          export PEM_FILE=${{ vars.GITHUB_WORKSPACE }}/gh_app_priv_key.pem
          export GH_ACCESS_TOKEN_1H_EXPIRATION=$( python3 ${{ vars.GITHUB_WORKSPACE }}/generate_gh_app_installation_token.py )
          rm ${{ vars.GITHUB_WORKSPACE }}/gh_app_priv_key.pem ${{ vars.GITHUB_WORKSPACE }}/generate_gh_app_installation_token.py
          echo "##vso[task.setvariable variable=GH_ACCESS_TOKEN_1H_EXPIRATION;issecret=true;isoutput=true]${GH_ACCESS_TOKEN_1H_EXPIRATION}"
        

      - name: Trigger Workflow
        if: steps.branch-check.outputs.branch_exists == 'true'
        run: |
          echo "trigger Workflow"


      - name: Trigger Workflow on Dev Branch
        if: steps.branch-check.outputs.branch_exists == 'false'
        run: |
          echo "trigger default workflow"

